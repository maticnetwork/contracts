{
  "contractName": "Address",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Utility library of inline functions on addresses\"}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]}},\"version\":1}",
  "bytecode": "0x604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820bde3533ed4d63d5365e9a2fd36b95b3211ee0ae04d0803d65bf36306e673191f0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820bde3533ed4d63d5365e9a2fd36b95b3211ee0ae04d0803d65bf36306e673191f0029",
  "sourceMap": "85:996:83:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "85:996:83:-;;;;;;;;",
  "source": "pragma solidity ^0.5.2;\n\n/**\n * Utility library of inline functions on addresses\n */\nlibrary Address {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n",
  "sourcePath": "openzeppelin-solidity/contracts/utils/Address.sol",
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        19038
      ]
    },
    "id": 19039,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19021,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:83"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses",
        "fullyImplemented": true,
        "id": 19038,
        "linearizedBaseContracts": [
          19038
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19036,
              "nodeType": "Block",
              "src": "529:550:83",
              "statements": [
                {
                  "assignments": [
                    19029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19029,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 19036,
                      "src": "539:12:83",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "539:7:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19030,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "539:12:83"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 19029,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1018:4:83",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 19023,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1038:7:83",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 19031,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1007:56:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19032,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19029,
                      "src": "1064:4:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 19033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1071:1:83",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1064:8:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 19027,
                  "id": 19035,
                  "nodeType": "Return",
                  "src": "1057:15:83"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
            "id": 19037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19023,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 19037,
                  "src": "483:15:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:83",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:17:83"
            },
            "returnParameters": {
              "id": 19027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19037,
                  "src": "523:4:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:6:83"
            },
            "scope": 19038,
            "src": "463:616:83",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 19039,
        "src": "85:996:83"
      }
    ],
    "src": "0:1082:83"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
    "exportedSymbols": {
      "Address": [
        19038
      ]
    },
    "id": 19039,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19021,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:83"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses",
        "fullyImplemented": true,
        "id": 19038,
        "linearizedBaseContracts": [
          19038
        ],
        "name": "Address",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19036,
              "nodeType": "Block",
              "src": "529:550:83",
              "statements": [
                {
                  "assignments": [
                    19029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19029,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 19036,
                      "src": "539:12:83",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "539:7:83",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19030,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "539:12:83"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 19029,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1018:4:83",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 19023,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1038:7:83",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 19031,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(account)\n}",
                  "src": "1007:56:83"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 19034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19032,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19029,
                      "src": "1064:4:83",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 19033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1071:1:83",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1064:8:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 19027,
                  "id": 19035,
                  "nodeType": "Return",
                  "src": "1057:15:83"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
            "id": 19037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19023,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 19037,
                  "src": "483:15:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:83",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "482:17:83"
            },
            "returnParameters": {
              "id": 19027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 19037,
                  "src": "523:4:83",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:6:83"
            },
            "scope": 19038,
            "src": "463:616:83",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 19039,
        "src": "85:996:83"
      }
    ],
    "src": "0:1082:83"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-09-21T10:53:39.387Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Utility library of inline functions on addresses"
  }
}